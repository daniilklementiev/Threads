Потоки (Threads)

Процесс (в терминах системы) - запуск и работа приложения
(термин, означающий однозадачную систему, между которыми переключается многозадачная ОС)

Системные потоки - части кода, выполняющиеся параллельно (асинхронно)

Идея многопоточности возникла с достижением определенного предела физического ускорения работы ПК: частота 
(длина волны меньше материнской платы), нагрев, фактор размера.

Традиционно, поток "стартует" на функции (процедуре).
Окончание функции (return) завершает поток 

-----
Схема запуска:
Button-Click --> WM_COMMAND --> 
StartThread() --> CreateThread() --> End
					|
					|
					V
			   ThreadProc --> MessageBox --> End
Если будет и MessageBox, и DialogBox внутри процедуры CreateThread, то какое окно отобразится раньше ответа нет - 
																					меняется от запуска к запуску

Button-Click --> WM_COMMAND --> StartThread() --> CreateThread2(... szTitle, ...) --> End
														  |			 |
														  |			 |	
														  V			 V
														ThreadProc2(param) --> MessageBox(.... params ....) --> End


---------Синхронизация

Пример проблемы:

activeThread = 2
Поток 1									|	Поток 2
activeThreads--;				// 1	|		activeThreads--;	// 0
	if (activeThreads == 0)				|			if (activeThreads == 0) 
		{ сработает, т.к. }				|						{ ... }
		другой поток уменьшил			|
			до 0						|


Атомарность операции - эффект транзакции - "все или ничего"
- имеется ввиду выполнение операции присваивания (вычисление правой части, перенос в левую часть) как неразрывного процесса. 
- операции, выполняющиеся как единое целое либо не выполняющиеся вовсе.

Проблема в том, что операция присваивания разделена во времени.

х = х + 1;
a) извлекается значение х (переносится из памяти в регистр проц.)
б) добавляется 1 (Х+1 еще находится в регистре процессора)
в) из процессора данные переносятся в память "х"

Проблема - между а) и в ) может "вклиниться" другой поток
Атомарность - неделимость, неразрывность а-б-в

Решения:
сигнальные объекты + состояние ожидания
Схема:
-создаем сигнальный объект (напр. мьютекс)
-- транзакция
- переводим сигнальный объект в режим "заблокирован" 
	(если объект и так заблокирон, то ожидаем его освобождения)
- выполняем операции
- разблокируем объект
-- конец транзакции


Критическая секция (раздел) - участок памяти, который предотвращает одновременный доступ в разных потоках. (конфликт потоков)

