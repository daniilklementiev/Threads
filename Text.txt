Потоки (Threads)

Процесс (в терминах системы) - запуск и работа приложения
(термин, означающий однозадачную систему, между которыми
переключается многозадачная ОС)

Системные потоки - части кода, выполняющиеся параллельно
(асинхронно)

Идея многопоточности возникла с достижением предела физического
ускорения работы ПК: частота (длина волны меньше мат.платы),
нагрев, фактор размера

Традиционно, поток "стартует" на функции (процедуре).
Окончание функции (return) завершает поток

-----
Схема запуска:
Button-Click --> WM_COMMAND --> StartThread() -->
--> CreateThread() --> DialogBox--> End
         |                                   Какое окно отобразится раньше
         V                                      DialogBox / MessageBox ?
     ThreadProc --> MessageBox --> End       Ответа нет, меняется от запуска к запуску

2
     --> CreateThread2(... szTitle, ...) --> --> End
                  |           |                        
                  V           V                        
                ThreadProc2(params) --> MessageBox(... params...) --> End    

new DepData    ...[month,percent]...
                 1500(адрес)

CreateThread(... 1500 ...)
                  |
   ThreadProc3(params){ что мы знаем о параметре? 
    только то, что он лежит по адресу 1500
    DepData* data = (DepData*)params - "смотрим" на 1500 через тип DepData
    }
------------ Синхронизация
Пример проблемы:

activeThreads = 2
Поток 1                         Поток 2
activeThreads--;  // 1       |  activeThreads--;  // 0
    if (activeThreads == 0)  |      if (activeThreads == 0)
    { сработает, т.к. }      |      { ... }
      другой поток уменьшил
      до 0

Атомарность операции - эффект транзакции - "все или ничего"
- выполнение операции присваивания (вычисление правой
части, перенос в левую часть) как неразрывного процесса

x = x + 1
а) извлекается значение х (переносится из памяти в проц.)
б) добавляется 1 (х+1 еще находится в проц.)
в) из проц. данные переносятся в память "х"

Проблема - между а) и в) может "вклиниться" другой поток
Атомарность - неделимость, неразрывность а-б-в

Мьютекс - критическая секция

Решения:
сигнальные объекты + состояние ожидания
Схема:
- создаем сигнальный объект СО (напр. мьютекс)
-- транзакция
- переводим СО в режим "заблокирован" (если объект
    и так заблокирован, то ожидаем его освобождения)
- выполняем операции
- разблокируем объект
-- конец транзакции